@import "../var.scss";

.editUserContainer {
  display: flex;
  justify-content: center;
  flex-direction: column;
  width: 100%;
  padding: 15px 45px;
  gap: 40px;

  h3 {
    padding: 20px 0px 0px 30px;
  }

  form {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    gap: 10px;
    width: 100%;
    padding: 20px 30px;
    border-radius: 20px;
    overflow: hidden;
    flex-shrink: 0;

    .inputContainer {
      width: 100%;
      display: flex;
      flex-direction: column;
      gap: 10px;

      .titleInput {
        &:hover {
          background-color: rgba(255, 255, 255, 0.021);
          transition: 0.3s;
        }
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        height: 40px;
        border-radius: 50px;
        padding: 0px 10px;
        user-select: none;
        cursor: pointer;
        transition: 0.3s;

        .currentValue {
          display: flex;
          flex: 1;
          justify-content: flex-end;
          gap: 15px;
          svg {
            height: 22px;
            width: 22px;
            transition: 0.3s;
          }

          p {
            max-width: 300px;
            overflow: hidden;
            text-overflow: ellipsis;
          }
        }
      }

      .myTextInput {
        display: grid;
        grid-template-rows: 0fr;
        transition: grid-template-rows 0.25s ease-out;

        .DisplayInputContainer {
          display: flex;
          justify-content: flex-end;
          overflow: hidden;
          padding: 0px 10px;

          input {
            position: relative;
            z-index: 1;
            border: none;
            padding: 10px 35px 10px 20px;
            width: 40%;
            border-radius: 100px;
            background-color: rgba(128, 128, 128, 0.142);
            font-size: 14px;
            font-family: Montserrat;
            color: #ff4ca8;
            border: 1px solid rgba(255, 255, 255, 0.1803921569);
          }
        }

        .myRadioInput {
          display: flex;
          align-items: center;
          justify-content: flex-end;
          gap: 15px;
          flex-wrap: wrap;
          overflow: hidden;
          padding: 0px 10px;

          input[type="checkbox"] {
            display: none;
          }

          input[type="checkbox"]:checked + label {
            cursor: pointer;
            background-color: black;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 10px 24px;
            border: 1px solid var(--basic-dark, rgba(25, 43, 57, 0.1294117647));
            border-radius: 100px;
            font-size: 14px;
            line-height: 16px;
            letter-spacing: 0.75px;
          }

          label {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 150px;
            padding: 10px 24px;
            background-color: white;
            color: black;
            border: 1px solid var(--basic-dark, rgba(25, 43, 57, 0.1294117647));
            border-radius: 100px;
            font-size: 14px;
            line-height: 16px;
            letter-spacing: 0.75px;
            cursor: pointer;
            user-select: none;
            text-align: center;
          }
        }

        textarea {
          resize: none;
          border: none;
          outline: none;
          height: 200px;
          width: 100%;
          padding: 10px 20px;
          font-family: Montserrat;
          font-size: 14px;
          line-height: 16px;
          letter-spacing: 0.75px;
          border-radius: 10px;
        }
      }

      .errorEdit {
        display: flex;
        justify-content: flex-end;
        font-family: monospace;
        margin-left: 10px;
        color: red;
        margin-top: 0.2rem;
        mix-blend-mode: difference;
        padding: 0px 10px;
      }

      .labelContainer {
        color: white;
        width: 100px;
      }

      .myRadioInput input[type="radio"] + label {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 10px 24px;
        border: 1px solid var(--basic-dark, #192b3921);
        border-radius: 100px;
        font-size: 14px;
        line-height: 16px;
        letter-spacing: 0.75px;
        cursor: pointer;
      }

      .myRadioInput input[type="radio"]:checked + label {
        background-color: black;
        color: white;
      }

      input[type="radio"] {
        display: none;
      }
    }

    .inputContainer.active {
      .currentValue {
        svg {
          transform: rotate(90deg);
          transition: 0.3s;
        }
      }

      .myTextInput {
        grid-template-rows: 1fr;
      }
    }

    .currentValue {
      p::first-letter {
        text-transform: capitalize;
      }
    }

    .sendButton {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100%;

      button {
        &:hover {
          background-color: #ff309b;
          transition: 0.3s;
        }
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        background-color: #ff4ca8;
        color: white;
        padding: 10px 24px;
        border-radius: 100px;
        font-family: Montserrat;
        font-size: 14px;
        line-height: 16px;
        letter-spacing: 0.75px;
        transition: 0.3s;

        svg {
          height: 18px;
        }
      }

      .disabledBtn {
        color: grey;
        background-color: rgba(208, 208, 208, 0.636);
        border: 1px solid rgba(0, 0, 0, 0.393);
        cursor: unset;
      }
    }
  }
}

@media screen and (max-width: 1420px) {
  .editUserContainer form .inputContainer .myTextInput .myRadioInput {
    justify-content: center;
  }
}
@media screen and (max-width: 1000px) {
  .editUserContainer
    form
    .inputContainer
    .myTextInput
    .DisplayInputContainer
    input {
    width: 80%;
  }
}

@media screen and (max-width: 580px) {
  .editUserContainer form .inputContainer .titleInput .currentValue .tagName {
    display: none;
  }
}

@media screen and (max-width: 630px) {
  .editUserContainer {
    padding: 15px 10px;
    form {
      .inputContainer {
        .myTextInput .DisplayInputContainer input {
          width: 100%;
        }
        .titleInput .currentValue p {
          max-width: 200px;
        }
      }
    }
  }
}

@media screen and (max-width: 460px) {
  .editUserContainer {
    h3 {
      padding: 0px 0px;

    }
    form {
      padding: 20px 0px;
    }
  }
}

@media screen and (max-width: 400px) {
  .editUserContainer form .inputContainer .titleInput .currentValue p {
    display: none;
  }
}

@media screen and (max-width: 230px) {
  .editUserContainer
    form
    .inputContainer
    .myTextInput
    .DisplayInputContainer
    input {
    padding: 10px 10px;
  }
}
